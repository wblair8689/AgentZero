steps:
# 1. Install dependencies
- name: 'gcr.io/cloud-builders/npm'
  args: ['install']
  id: 'Install Dependencies'

# 2. Run tests
# Add specific test commands here (e.g., unit, integration)
# This example uses Jest and Cucumber based on PROJECT_STATUS.md
- name: 'gcr.io/cloud-builders/npm'
  args: ['run', 'test'] # Assumes 'test' script in package.json runs Jest/Cucumber
  id: 'Run Tests'
  waitFor: ['Install Dependencies'] # Ensure dependencies are installed first

# 3. Deploy to Cloud Run using Source Deployment
# Cloud Build automatically builds the container from source and deploys it.
# Requires appropriate IAM permissions for the Cloud Build service account.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  args:
    - 'gcloud'
    - 'run'
    - 'deploy'
    - '${_SERVICE_NAME}' # Substitution variable for your Cloud Run service name
    - '--source'
    - '.' # Use the current directory as source
    - '--region=${_REGION}' # Substitution variable for the deployment region
    - '--project=${PROJECT_ID}' # PROJECT_ID is a built-in substitution
    # Optional: Specify the Artifact Registry repo if not using the default convention
    # - '--image=ARTIFACT_REGISTRY/${PROJECT_ID}/${_SERVICE_NAME}/image-name:$COMMIT_SHA' 
    # Optional: Add other Cloud Run flags as needed (e.g., --allow-unauthenticated, --port)
  id: 'Deploy to Cloud Run'
  waitFor: ['Run Tests'] # Only deploy if tests pass

# Optional: Tag the image in Artifact Registry for clarity (if not using default naming)
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['tag', 'gcr.io/${PROJECT_ID}/${_SERVICE_NAME}', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:$COMMIT_SHA']
#   id: 'Tag Image'
#   waitFor: ['Deploy to Cloud Run']

# Optional: Push the tagged image (redundant if Cloud Run source deploy handles it)
# - name: 'gcr.io/cloud-builders/docker'
#   args: ['push', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}:$COMMIT_SHA']
#   id: 'Push Image'
#   waitFor: ['Tag Image']


# Configure the build options - Required for service account
options:
  logging: GCS_ONLY # Send logs only to the specified GCS bucket
  logsBucket: 'gs://agentzero-build-logs' # Store logs in the designated bucket
  # Alternative options if needed:
  # logging: NONE
  # default_logs_bucket_behavior: REGIONAL_USER_OWNED_BUCKET

# Define substitution variables (can be set in triggers or at build time)
substitutions:
  _SERVICE_NAME: 'agentzero-orchestrator' # Example service name - CHANGE THIS
  _REGION: 'us-central1' # Example region - CHANGE THIS
  # _ARTIFACT_REGISTRY_REPO: 'my-agent-repo' # Example repo name - UNCOMMENT AND CHANGE IF NEEDED

# Configure the build timeout (optional)
timeout: '1200s' # 20 minutes

# Specify images to be pushed to Artifact Registry by the deployment step (optional but good practice)
# This helps track artifacts even though source deploy handles the build implicitly.
# The image name format might vary slightly based on source deploy defaults.
# images:
# - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}' # Adjust if needed 