steps:
# 1. Install dependencies
- name: 'gcr.io/cloud-builders/nodejs:18'
  entrypoint: 'npm'
  args: ['install']
  id: 'Install Dependencies'

# 2. Run Jest unit tests with JUnit reporter for better CI integration
- name: 'gcr.io/cloud-builders/nodejs:18'
  entrypoint: 'npm'
  args: ['run', 'test:jest:ci']
  id: 'Run Jest Tests'
  waitFor: ['Install Dependencies']

# 3. Run Cucumber BDD tests with proper formatter for CI
- name: 'gcr.io/cloud-builders/nodejs:18'
  entrypoint: 'npm'
  args: ['run', 'test:bdd:ci']
  id: 'Run Cucumber Tests'
  waitFor: ['Install Dependencies']

# 4. Deploy to Cloud Run (only if tests pass)
# Cloud Build automatically builds the container from source and deploys it.
# Requires appropriate IAM permissions for the Cloud Build service account.
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  args:
    - 'gcloud'
    - 'run'
    - 'deploy'
    - '${_SERVICE_NAME}' # Substitution variable for your Cloud Run service name
    - '--source'
    - '.' # Use the current directory as source
    - '--region=${_REGION}' # Substitution variable for the deployment region
    - '--project=${PROJECT_ID}' # PROJECT_ID is a built-in substitution
    # Optional: Specify the Artifact Registry repo if not using the default convention
    # - '--image=ARTIFACT_REGISTRY/${PROJECT_ID}/${_SERVICE_NAME}/image-name:$COMMIT_SHA' 
    # Optional: Add other Cloud Run flags as needed (e.g., --allow-unauthenticated, --port)
  id: 'Deploy to Cloud Run'
  waitFor: ['Run Jest Tests', 'Run Cucumber Tests'] # Wait for both test steps to complete

# 5. Store test reports as build artifacts
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', '-r', 'test-reports/', 'gs://${_ARTIFACTS_BUCKET}/test-reports/${BUILD_ID}/']
  id: 'Store Test Reports'
  waitFor: ['Run Jest Tests', 'Run Cucumber Tests']

# Configure the build options - Required for service account
options:
  logging: CLOUD_LOGGING_ONLY # Required when a service account is specified
  # Alternative options if needed:
  # logging: NONE
  # default_logs_bucket_behavior: REGIONAL_USER_OWNED_BUCKET

# Define substitution variables (can be set in triggers or at build time)
substitutions:
  _SERVICE_NAME: 'agentzero-orchestrator' # Example service name - CHANGE THIS
  _REGION: 'us-central1' # Example region - CHANGE THIS
  _ARTIFACTS_BUCKET: '${PROJECT_ID}_cloudbuild' # Default bucket for storing artifacts
  # _ARTIFACT_REGISTRY_REPO: 'my-agent-repo' # Example repo name - UNCOMMENT AND CHANGE IF NEEDED

# Configure the build timeout (optional)
timeout: '1200s' # 20 minutes

# Specify images to be pushed to Artifact Registry by the deployment step (optional but good practice)
# This helps track artifacts even though source deploy handles the build implicitly.
# The image name format might vary slightly based on source deploy defaults.
# images:
# - '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_ARTIFACT_REGISTRY_REPO}/${_SERVICE_NAME}' # Adjust if needed 

# Define artifacts to save
artifacts:
  objects:
    location: 'gs://${_ARTIFACTS_BUCKET}/test-reports/${BUILD_ID}/'
    paths: ['test-reports/**/*'] 